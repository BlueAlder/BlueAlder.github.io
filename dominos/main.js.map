{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"@import url('https://fonts.googleapis.com/css?family=Lato');\\r\\n\\r\\n#mynetwork {\\r\\n  height: 500px;\\r\\n  width: 60%;\\r\\n  margin: auto;\\r\\n  border: 1px #AAAAAA solid;\\r\\n  background-color: #b4b4b4;\\r\\n}\\r\\n\\r\\n.placeholder {\\r\\n  margin-top: 200px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.info-bar {\\r\\n  text-align: left;\\r\\n  display: inline-block;\\r\\n  width: 18%;\\r\\n  float: left;\\r\\n  background-color: #888888;\\r\\n  color: white;\\r\\n  margin: 0 5px 5px;\\r\\n  padding: 5px;\\r\\n}\\r\\n\\r\\n.info-bar p {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\np.server-link:hover {\\r\\n  color: blue;\\r\\n}\\r\\n\\r\\n.filters{\\r\\n  margin: auto;\\r\\n  max-width: 60%;\\r\\n  text-align: center;\\r\\n  padding-top: 60px;\\r\\n  padding-bottom: 20px;\\r\\n}\\r\\n\\r\\n.banner {\\r\\n  background-color: #AAAAAA;\\r\\n  color: white;\\r\\n  padding: 10px 0 10px 30px;\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\n.selection-item {\\r\\n  display: inline-block;\\r\\n  margin: 10px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"banner\\\">\\n  <h1>Dominos</h1>\\n</div>\\n<div class=\\\"container\\\">\\n\\n  <div class=\\\"filters\\\">\\n    <h3>View</h3>\\n    <form class=\\\"selection-filter\\\">\\n\\n      <div class=\\\"btn-group btn-group-toggle\\\" data-toggle=\\\"buttons\\\">\\n        <label class=\\\"btn btn-secondary\\\">\\n          <input type=\\\"radio\\\" name=\\\"view\\\" [(ngModel)]=\\\"selectedView\\\" value=\\\"platform\\\">\\n          Platform</label>\\n\\n        <label class=\\\"btn btn-secondary\\\">\\n          <input type=\\\"radio\\\" name=\\\"view\\\" [(ngModel)]=\\\"selectedView\\\" value=\\\"server\\\">\\n          Server</label>\\n\\n        <label class=\\\"btn btn-secondary\\\">\\n          <input type=\\\"radio\\\" name=\\\"network\\\" [(ngModel)]=\\\"selectedView\\\" value=\\\"network\\\">\\n          Network</label>\\n      </div>\\n    </form>\\n\\n    <form [formGroup]=\\\"serverForm\\\" (ngSubmit)=\\\"generateVisualisation()\\\" *ngIf=\\\"selectedView === 'server'\\\">\\n      <label>Server\\n        <select formControlName=\\\"server\\\" class=\\\"custom-select\\\">\\n          <option disabled selected value> -- select an option --</option>\\n          <option>PRODAPP20</option>\\n          <option>UL11as32V</option>\\n          <option>hb13as35v</option>\\n          <option>RECOAPP20</option>\\n        </select>\\n      </label>\\n\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Generate</button>\\n    </form>\\n\\n    <form *ngIf=\\\"selectedView === 'platform'\\\" [formGroup]=\\\"applicationForm\\\" (ngSubmit)=\\\"generateVisualisation()\\\">\\n      <div class=\\\"selection-item\\\">\\n        <label>Platform\\n          <select formControlName=\\\"platform\\\" class=\\\"custom-select\\\">\\n            <option disabled selected value> -- select an option --</option>\\n            <option value=\\\"switch\\\">Switch</option>\\n            <option value=\\\"API\\\">API</option>\\n            <option>Mobile</option>\\n            <option>Portal</option>\\n            <option>Fraud</option>\\n          </select>\\n        </label>\\n      </div>\\n\\n      <div *ngIf=\\\"applicationForm.value.platform === 'API'\\\" class=\\\"selection-item\\\">\\n        <label>Service\\n          <select formControlName=\\\"application\\\" class=\\\"custom-select\\\">\\n            <option disabled selected value> -- select an option --</option>\\n            <option value=\\\"cardControls\\\">Card Controls</option>\\n            <option >Security Service</option>\\n          </select>\\n        </label>\\n      </div>\\n\\n      <div *ngIf=\\\"applicationForm.value.platform === 'switch'\\\" class=\\\"selection-item\\\">\\n        <label>Switch\\n          <select formControlName=\\\"application\\\" class=\\\"custom-select\\\">\\n            <option disabled selected value> -- select an option --</option>\\n            <option value=\\\"authentic\\\">Authentic</option>\\n            <option >Postilion</option>\\n          </select>\\n        </label>\\n      </div>\\n      <div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Show Me</button>\\n\\n      </div>\\n\\n    </form>\\n  </div>\\n\\n</div>\\n<div id=\\\"graphAndInfo\\\">\\n  <div class=\\\"info-bar\\\" *ngIf=\\\"selectedApplication != null\\\">\\n    <p>Name: {{selectedApplication.name}}</p>\\n    <p>Clients:</p>\\n    <ul *ngFor=\\\"let client of selectedApplication.clients\\\">\\n      <li>{{client}}</li>\\n    </ul>\\n    <p class=\\\"server-link\\\" (click)=\\\"changeView('server', selectedApplication.server)\\\">Running on server:\\n      {{selectedApplication.server}}</p>\\n    <p>Product Owner: {{selectedApplication.productOwner}}</p>\\n  </div>\\n  <div id=\\\"mynetwork\\\"><div class=\\\"wrapper\\\">\\n    <div class=\\\"letters\\\"><span class=\\\"letter\\\">v</span><span class=\\\"letter\\\">i</span><span class=\\\"letter\\\">s</span><span class=\\\"letter\\\">u</span><span class=\\\"letter\\\">a</span><span class=\\\"letter\\\">l</span><span class=\\\"letter\\\">i</span><span class=\\\"letter\\\">s</span><span class=\\\"letter\\\">e</span><span class=\\\"letter\\\">r</span>\\n    </div>\\n  </div></div>\\n\\n</div>\\n\\n\\n\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport * as vis from 'vis';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Application} from './application.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'impact-analysis';\n  applicationForm: FormGroup;\n  serverForm: FormGroup;\n\n  selectedView: string;\n  selectedApplication: Application;\n\n  constructor(private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.applicationForm = this.formBuilder.group({\n      platform: ['', Validators.required],\n      application: ['', Validators.required]\n    });\n\n    this.serverForm = this.formBuilder.group({\n      server: ['', Validators.required]\n    });\n\n  }\n\n  changeView(view: string, server) {\n    this.selectedView = view;\n    this.serverForm.setValue({server: server});\n    this.generateVisualisation();\n\n  }\n\n  generateVisualisation() {\n    console.log(this.selectedView);\n    if (this.selectedView === 'platform') {\n      if (this.applicationForm.valid && this.applicationForm.value.application === 'cardControls') {\n        const nodes = new vis.DataSet([\n          {id: 1, label: 'Card Controls', color: '#ff8878'},\n          {id: 2, label: 'SPS Portal'},\n          {id: 3, label: 'EFT Portal'},\n          {id: 4, label: 'Database'},\n          {id: 5, label: 'Switch AUX'},\n          {id: 6, label: 'Switch Pos'},\n          {id: 7, label: 'Mobile Apps'},\n\n        ]);\n\n        const edges = new vis.DataSet([\n          {from: 1, to: 4},\n          {from: 2, to: 1},\n          {from: 3, to: 1},\n          {from: 5, to: 4},\n          {from: 6, to: 4},\n          {from: 7, to: 1},\n        ]);\n\n        const network = displayGraph(nodes, edges);\n        network.on('click', (properties) => {\n          console.log(properties);\n          if (properties.nodes[0] === 1) {\n            this.selectedApplication = {\n              name: 'Card Controls',\n              clients: ['CUA', 'TMB', 'FB'],\n              server: 'PRODAPP20',\n              productOwner: 'The coolest product owner'\n            };\n          } else if (properties.nodes[0] === 2) {\n            this.selectedApplication = {\n              name: 'SPS Portal',\n              clients: ['ING', 'Bendigo', 'CUA'],\n              server: 'EFTPOS20',\n              productOwner: 'Joe from accounting'\n            };\n          } else {\n            this.selectedApplication = null;\n          }\n        });\n      } else if (this.applicationForm.valid && this.applicationForm.value.application === 'authentic') {\n        const nodes = new vis.DataSet([\n          {id: 1, label: 'Authentic', color: 'green'},\n          {id: 2, label: 'Pin Status'},\n          {id: 3, label: 'Message Broker'},\n          {id: 4, label: 'VISA'},\n          {id: 5, label: 'E-Hub'},\n          {id: 6, label: 'MasterCard'},\n          {id: 7, label: 'Bilat'},\n          {id: 8, label: 'Fraud'},\n          {id: 9, label: 'CBS'},\n          {id: 10, label: 'Aux Database'}\n        ]);\n\n        const edges = new vis.DataSet([\n          {from: 2, to: 1},\n          {from: 3, to: 1},\n          {from: 4, to: 1},\n          {from: 5, to: 1},\n          {from: 6, to: 1},\n          {from: 7, to: 1},\n          {from: 8, to: 1},\n          {from: 9, to: 1},\n          {from: 10, to: 1},\n        ]);\n\n        const network = displayGraph(nodes, edges);\n      }\n    } else if (this.selectedView === 'server') {\n      if (this.serverForm.valid) {\n        const nodes = new vis.DataSet([\n          {id: 1, label: 'PRODAPP20', color: '#ff8878'},\n          {id: 2, label: 'PAYS'},\n          {id: 3, label: 'EFT Portal'},\n          {id: 4, label: 'Transaction Service'},\n          {id: 5, label: 'B2B Services'}\n        ]);\n\n        const edges = new vis.DataSet([\n          {from: 2, to: 1},\n          {from: 3, to: 1},\n          {from: 4, to: 1},\n          {from: 5, to: 1}\n        ]);\n\n        const network = displayGraph(nodes, edges);\n      }\n    }\n  }\n}\n\nfunction displayGraph(nodes, edges) {\n  const container = document.getElementById('mynetwork');\n  const data = {\n    nodes: nodes,\n    edges: edges\n  };\n  const options = {\n    edges: {\n      arrows: 'to'\n    }\n  };\n  return new vis.Network(container, data, options);\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}